## Reference
# %d local user home dir
# %l local host name
# %u local username
# %h target host name
# %n host name as on cli
# %p remote port
# %r remote username

## Global (misc)
ControlMaster auto
ControlPath /home/jphafner/.ssh/tmp/%r@%h:%p
ControlPersist 600s
ForwardAgent no
# Ensure KnownHosts are unreadable if leaked
HashKnownHosts yes
VisualHostKey yes

# Host keys the client accepts
#HostKeyAlgorithms ssh-ed25519-cert-v01@openssh.com,ssh-rsa-cert-v01@openssh.com,ssh-ed25519,ssh-rsa,ecdsa-sha2-nistp521-cert-v01@openssh.com,ecdsa-sha2-nistp384-cert-v01@openssh.com,ecdsa-sha2-nistp256-cert-v01@openssh.com,ecdsa-sha2-nistp521,ecdsa-sha2-nistp384,ecdsa-sha2-nistp256
#KexAlgorithms curve25519-sha256@libssh.org,ecdh-sha2-nistp521,ecdh-sha2-nistp384,ecdh-sha2-nistp256,diffie-hellman-group-exchange-sha256,diffie-hellman-group1-sha1
#MACs hmac-sha2-512-etm@openssh.com,hmac-sha2-256-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-512,hmac-sha2-256,umac-128@openssh.com
#Ciphers chacha20-poly1305@openssh.com,aes256-gcm@openssh.com,aes128-gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr,aes128-cbc,blowfish-cbc,3des-cbc

# RSA keys are favored over ECDSA keys when backward compatibility ''is required'',
# thus, newly generated keys are always either ED25519 or RSA (NOT ECDSA or DSA).
#$ ssh-keygen -t rsa -b 4096 -f ~/.ssh/id_rsa_mozilla_$(date +%Y-%m-%d) -C "Mozilla key for xyz"

# ED25519 keys are favored over RSA keys when backward compatibility ''is not required''.
# This is only compatible with OpenSSH 6.5+ and fixed-size (256 bytes).
#$ ssh-keygen -t ed25519 -f ~/.ssh/id_ed25519_mozilla_$(date +%Y-%m-%d) -C "Mozilla key for xyz"

## Default
Host *
    StrictHostKeyChecking ask
    ServerAliveInterval 30
    ServerAliveCountMax 6
    Compression yes
    ForwardX11Trusted yes
    TCPKeepAlive yes
    Protocol 2

## Consider starting command
# PermitLocalCommand
# LocalComamnd tmux attach -dE
# LocalComamnd screen -dR

## Dynamic jumphost
## i.e. ssh util01+ndh1-vb01exs033.mckesson
Host *+*
    ## Netcat
    ProxyCommand ssh $(echo %h | sed 's/+[^+]*$//;s/\([^+%%]*\)%%\([^+]*\)$/\2 -l \1/;s/:/ -p /') exec ncat -w1 $(echo %h | sed 's/^.*+//;/:/!s/$/ %p/;s/:/ /')
    ## socat
    #ProxyCommand ssh $(echo %h | sed 's/+[^+]*$//;s/\([^+%%]*\)%%\([^+]*\)$/\2 -l \1/;s/:/ -p /') exec socat STDIN TCP:$(echo %h | sed 's/^.*+//;/:/!s/$/ %p/;s/:/ /')

